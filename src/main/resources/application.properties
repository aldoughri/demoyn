#Oauth Google 	http://localhost:8080/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.client-id=915665413987-curbu55n7go40692esl8o9vhqhj45oup.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=5QMShzO8TLh_fJmm9nzWK-ca
spring.datasource.url=jdbc:mysql://localhost:3306/metgloo_blogs
# Username and password
spring.datasource.username=root
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#server.servlet.session.cookie.http-only=true to server.session.tracking-modes=cookie
#server.servlet.session.tracking-modes=cookie

#logging.level.root=debug
#logging.level.org.org.springframework.web=info
logging.level.com.infotech.com.infotech.app=info

# Logging pattern for the console
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Logging pattern for file
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
#logging.path=logs
logging.file=logfile/myapp.log
